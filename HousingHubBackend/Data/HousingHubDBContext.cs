using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using HousingHubBackend.Models;

namespace HousingHubBackend.Data
{
    public partial class HousingHubDBContext : DbContext
    {
        public HousingHubDBContext()
        {
        }

        public HousingHubDBContext(DbContextOptions<HousingHubDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Amenity> Amenities { get; set; }
        public virtual DbSet<Announcement> Announcements { get; set; }
        public virtual DbSet<AnnouncementTargetFlat> AnnouncementTargetFlats { get; set; }
        public virtual DbSet<AnnouncementTargetWing> AnnouncementTargetWings { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<Flat> Flats { get; set; }
        public virtual DbSet<MaintenanceBill> MaintenanceBills { get; set; }
        public virtual DbSet<MaintenanceFee> MaintenanceFees { get; set; }
        public virtual DbSet<Society> Societies { get; set; }
        public virtual DbSet<UserAccount> UserAccounts { get; set; }
        public virtual DbSet<Visitor> Visitors { get; set; }
        public virtual DbSet<Wing> Wings { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                // Use connection string from configuration
                optionsBuilder.UseSqlServer(); // The actual connection string will be provided by DI in Program.cs
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            // Place for additional model configuration if needed.
            // This is typically auto-generated by EF Core Power Tools or migrations.
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}