import React from 'react';
import PropTypes from 'prop-types';
import { Link, useLocation } from 'react-router-dom';
import { 
  Home, 
  Building2, 
  Users, 
  MessageSquare, 
  Wrench, 
  Calendar, 
  FileText, 
  UserCheck, 
  Settings,
  LogOut,
  Shield,
  Bell
} from 'lucide-react';
import { useAuth } from '../../contexts/AuthContext';
import clsx from 'clsx';

const Sidebar = () => {
  const { user, logout } = useAuth();
  const location = useLocation();

  const getMenuItems = () => {
    switch (user?.role) {
      case 'super_admin':
        return [
          { icon: Home, label: 'Dashboard', path: '/dashboard' },
          { icon: Building2, label: 'Societies', path: '/societies' },
          { icon: Shield, label: 'Admins', path: '/admins' }
          //{ icon: Settings, label: 'Settings', path: '/settings' }
        ];
      case 'admin':
        return [
          { icon: Home, label: 'Dashboard', path: '/dashboard' },
          { icon: Building2, label: 'Wings & Flats', path: '/wings-flats' },
          { icon: Users, label: 'Residents', path: '/residents' },
          { icon: Shield, label: 'Staff', path: '/security-staff' }, // Updated label and path
          { icon: MessageSquare, label: 'Complaints', path: '/complaints' },
          { icon: Bell, label: 'Announcements', path: '/announcements' },
          //{ icon: Wrench, label: 'Maintenance', path: '/maintenance' },
          { icon: Calendar, label: 'Amenities', path: '/amenities' }
          //{ icon: FileText, label: 'Bills', path: '/bills' }
        ];
      case 'resident':
        return [
          { icon: Home, label: 'Dashboard', path: '/dashboard' },
          { icon: Bell, label: 'Announcements', path: '/announcements' },
          { icon: MessageSquare, label: 'Complaints', path: '/complaints' },
          { icon: Calendar, label: 'Amenities', path: '/amenities' },
          //{ icon: FileText, label: 'Bills', path: '/bills' },
          { icon: UserCheck, label: 'Visitors', path: '/visitors' }
        ];
      case 'security_staff':
        return [
          { icon: Home, label: 'Dashboard', path: '/dashboard' },
          { icon: UserCheck, label: 'Visitor Entry', path: '/visitor-entry' },
          { icon: Users, label: 'Visitors Log', path: '/visitors-log' }
        ];
      default:
        return [];
    }
  };

  const menuItems = getMenuItems();

  return (
    <div className="bg-white shadow-lg h-full flex flex-col">
      <div className="p-6 border-b border-gray-200">
        <div className="flex items-center space-x-3">
          <Building2 className="h-8 w-8 text-blue-600" />
          <div>
            <h2 className="text-xl font-bold text-gray-800">HousingHub</h2>
            <p className="text-sm text-gray-500 capitalize">{user?.role?.replace('_', ' ')}</p>
          </div>
        </div>
      </div>

      <nav className="flex-1 p-4">
        <ul className="space-y-2">
          {menuItems.map((item, index) => {
            const Icon = item.icon;
            const isActive = location.pathname === item.path;
            
            return (
              <li key={index}>
                <Link
                  to={item.path}
                  className={clsx(
                    'flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors duration-200',
                    isActive
                      ? 'bg-blue-50 text-blue-700 border-r-4 border-blue-700'
                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-800'
                  )}
                >
                  <Icon className="h-5 w-5" />
                  <span className="font-medium">{item.label}</span>
                </Link>
              </li>
            );
          })}
        </ul>
      </nav>

      <div className="p-4 border-t border-gray-200">
        <div className="mb-4 p-3 bg-gray-50 rounded-lg">
          <p className="text-sm font-medium text-gray-800">{user?.name}</p>
          <p className="text-xs text-gray-500">{user?.email}</p>
        </div>
        <button
          onClick={logout}
          className="w-full flex items-center space-x-3 px-4 py-3 text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200"
        >
          <LogOut className="h-5 w-5" />
          <span className="font-medium">Logout</span>
        </button>
      </div>
    </div>
  );
};

export default Sidebar;